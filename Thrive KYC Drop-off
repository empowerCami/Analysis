drop table if exists #loanDriver
select 
distinct a.userId 
, a.UserLoanApplicationId -- could be multiple per userId
, a.progress as loanApplicationProgress
, case when a.progress = 6 then 1 else 0 end as stop_at_kyc_started_ind --  stop at kyc stage
, case when a.progress >= 7 then 1 else 0 end as kyc_ended_ind -- get beyond kyc stage
, case when a.progress >= 6 then 1 else 0 end as kyc_started_and_beyond  -- get at least to kyc statge
, a.CreatedAt as loanApplicationCreatedAt
, convert(varchar(7), a.CreatedAt , 23) as app_month
, RANK() OVER(PARTITION BY a.UserLoanApplicationId ORDER BY a.CreatedAt DESC) AS app_status_rank -- rank = 1 pulls most recent
, b.LoanId 
, b.Status as finalAppLoanStatus
, b.CreatedAt as loanCreatedAt
into #loanDriver
from UserLoanApplications a
left join loans b 
on a.UserLoanApplicationId = b.UserLoanApplicationId
where a.progress >= 6 -- limit to those that have made it to KYC stage
order by a.userId
;

-- for Thrive: how many people drop off kyc per month? 
drop table if exists #thrive_caserate_driver
select 
app_month 
, count(distinct UserLoanApplicationId) as total_apps
, sum(kyc_ended_ind) as tot_kyc_finished
, sum(kyc_started_and_beyond) as tot_kyc_started_beyond
, sum(stop_at_kyc_started_ind) as stop_at_kyc_started
into #thrive_caserate_driver
from #loanDriver 
group by app_month 
;

select * from #thrive_caserate_driver order by app_month ;

drop table if exists #thrive_caserate_driver2
select 
app_month
, total_apps
, tot_kyc_finished
, tot_kyc_started_beyond
, stop_at_kyc_started
into #thrive_caserate_driver2
from #thrive_caserate_driver 
;

select 
app_month 
, total_apps
, tot_kyc_finished
, tot_kyc_started_beyond
, (cast(tot_kyc_finished as float) / cast(tot_kyc_started_beyond as float)) as kyc_conversion 
, (cast(stop_at_kyc_started as float) / cast(tot_kyc_started_beyond as float)) as kyc_dropoff 
from #thrive_caserate_driver2
order by app_month
;
