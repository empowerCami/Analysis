-- KYC Data Analysis Jan 2023

drop table if exists #loanDriver
select 
distinct a.userId 
, a.UserLoanApplicationId -- could be multiple per userId
, a.progress as loanApplicationProgress
, case when a.progress = 6 then 1 else 0 end as stop_at_kyc_started_ind --  stop at kyc stage
, case when a.progress >= 7 then 1 else 0 end as kyc_ended_ind -- get beyond kyc stage
, case when a.progress >= 6 then 1 else 0 end as kyc_started_and_beyond  -- get at least to kyc statge
, a.CreatedAt as loanApplicationCreatedAt
, convert(varchar(7), a.CreatedAt , 23) as app_month
, RANK() OVER(PARTITION BY a.UserLoanApplicationId ORDER BY a.CreatedAt DESC) AS app_status_rank -- rank = 1 pulls most recent
, b.LoanId 
, b.Status as finalAppLoanStatus
, b.CreatedAt as loanCreatedAt

--- can't link to KYC table cleanly yet
-- , c.status as kyc_outcome
-- , c.createdAt as kyc_record_createdAt
-- , c.UserKycId 
-- , RANK() OVER(PARTITION BY c.userId ORDER BY c.CreatedAt DESC) AS kyc_instance_rank -- 1 = most recent 
into #loanDriver
from UserLoanApplications a
left join loans b 
on a.UserLoanApplicationId = b.UserLoanApplicationId
-- left join userKycs c 
-- on a.userId = c.userId 
where a.progress >= 6 -- limit to those that have made it to KYC stage
order by a.userId
;



-- for Thrive: how many people drop off kyc per month? 

drop table if exists #thrive_dropout_driver
select 
app_month 
, count(distinct UserLoanApplicationId) as total_apps
, sum(kyc_started_ind) as tot_kyc_started 
, sum(kyc_ended_ind) as tot_kyc_finished
, sum(kyc_started_and_beyond) as tot_kyc_started_beyond
into #thrive_dropout_driver
from #loanDriver 
group by app_month 
;


drop table if exists #thrive_dropout_driver2
select 
app_month
, total_apps
, tot_kyc_started 
, tot_kyc_finished
, tot_kyc_started_beyond
, (cast(tot_kyc_finished as float) + cast(tot_kyc_started as float)) as kyc_denom 
into #thrive_dropout_driver2
from #thrive_dropout_driver 
;

select 
app_month 
, total_apps
, tot_kyc_started 
, tot_kyc_finished
, kyc_denom 
, (cast(tot_kyc_finished as float) / cast(kyc_denom as float)) as kyc_conversion 
, (cast(tot_kyc_started as float) / cast(kyc_denom as float)) as kyc_dropoff 
from #thrive_dropout_driver2
order by app_month
;



--- What are the KYC outcomes 
drop table if exists #KYCdocs
select 
a.userKycId
, a.status as kyc_status_enum
, case when a.status = 0 then 'Not Initaited'
when a.status = 1 then 'Document Verification'
when a.status = 2 then 'Resubmit Address'
when a.status = 3 then 'Resubmit Document'
when a.status = 5 then 'Accept'
when a.status = 6 then 'Review'
when a.status = 7 then 'Decline'
when a.status = 8 then 'Reject'
when a.status = 9 then 'Review Accept'
when a.status = 10 then 'Review Reject'
end as kyc_status
, a.declinereason as kyc_decline_reason
, a.CreatedAt as KYCrecord_CreatedAt
, a.UserId 
, b.userDocumentId 
, b.orientation
, b.type as document_type_enum
, case when b.type = 0 then 'Drivers License'
when b.type = 1 then 'Passport'
when b.type = 2 then 'Government ID'
when b.type = 3 then 'Video'
when b.type = 4 then 'Video Snapshot'
when b.type = 5 then 'Encrypted Card Pin'
when b.type = 6 then 'CorePro Manual Review Document'
when b.type = 7 then 'Socure Document Verification'
when b.type = 8 then 'Cash Advance Authorization Agreement'
end as document_type
, c.userKycManualReviewDocumentId 
, c.ManualReviewDocumentId 
, d.manualReviewDocumentType as manualReviewDocumentType_enum
, case when d.manualReviewDocumentType = 0 then 'DriversLicense'
when d.manualReviewDocumentType = 1 then 'StateID'
when d.manualReviewDocumentType = 2 then 'USArmedForces'
when d.manualReviewDocumentType = 3 then 'Passport'
when d.manualReviewDocumentType = 4 then 'SocialSecurityCard'
when d.manualReviewDocumentType = 5 then 'SocialSecurityLetter'
when d.manualReviewDocumentType = 6 then 'PayStub'
when d.manualReviewDocumentType = 7 then 'UtilityBill'
when d.manualReviewDocumentType = 8 then 'AutomobileRegistration'
when d.manualReviewDocumentType = 9 then 'BirthCertificate'
when d.manualReviewDocumentType = 10 then 'LeaseAgreement'
when d.manualReviewDocumentType = 11 then 'BankStatement'
end as manualReviewDocumentType
, d.InternalReviewStatus as InternalReviewStatus_enum
, case when d.InternalReviewStatus = 0 then 'WaitingForUpload'
when d.InternalReviewStatus = 1 then 'Pending'
when d.InternalReviewStatus = 2 then 'Accepted'
when d.InternalReviewStatus = 3 then 'Rejected'
when d.InternalReviewStatus = 4 then 'Archived'
end as InternalReviewStatus

, d.ReviewedAt
, case when b.userDocumentId is not null then 1 else 0 end as submitted_document_flag 
, case when c.ManualReviewDocumentId is not null then 1 else 0 end as manually_reviewed_flag 
, case when a.status in (1,3,6,7,9,10) then 1 else 0 end as step_up_flag 
, case when a.status in (5, 9) then 1 else 0 end as passed_kyc_ind
, case when a.status in (7, 8, 10) then 1 else 0 end as failed_kyc

into #KYCdocs
from userKycs a 
left join UserKYCDocuments b 
on a.userKycId = b.userKycId 
left join UserKycManualReviewDocuments c 
on a.userKycId = c.userKycId 
left join ManualReviewDocuments d 
on c.manualReviewDocumentId = d.manualReviewDocumentId
;

select 
distinct kyc_status 
, convert(varchar(7), KYCrecord_CreatedAt , 23) as kyc_month 
, document_type 
, manualReviewDocumentType 
, InternalReviewStatus 
, submitted_document_flag 
, manually_reviewed_flag 
, step_up_flag
, passed_kyc_ind
, failed_kyc
, count(distinct userKycId) as tot_kyc_ids
from #KYCdocs 
group by kyc_status 
, convert(varchar(7), KYCrecord_CreatedAt , 23)
, document_type 
, manualReviewDocumentType 
, InternalReviewStatus 
, submitted_document_flag 
, manually_reviewed_flag 
, step_up_flag
, passed_kyc_ind
, failed_kyc

order by kyc_status
;
